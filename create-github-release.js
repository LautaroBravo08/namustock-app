#!/usr/bin/env node

/**
 * Script para crear GitHub Release COMPLETAMENTE AUTOM√ÅTICO
 * Sube autom√°ticamente el APK usando GitHub CLI
 */

const fs = require('fs');
const { execSync } = require('child_process');

// Colores para la consola
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function logSuccess(message) {
  log(`‚úÖ ${message}`, 'green');
}

function logError(message) {
  log(`‚ùå ${message}`, 'red');
}

function logInfo(message) {
  log(`‚ÑπÔ∏è  ${message}`, 'blue');
}

// Funci√≥n principal
async function main() {
  try {
    log('\nüöÄ Creando GitHub Release para solucionar actualizaciones...', 'bright');
    
    // Leer versi√≥n actual
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const version = packageJson.version;
    const tagName = `v${version}`;
    
    logInfo(`Versi√≥n actual: ${version}`);
    
    // Verificar que el APK existe
    const apkPath = `releases/namustock-${version}.apk`;
    if (!fs.existsSync(apkPath)) {
      logError(`APK no encontrado: ${apkPath}`);
      logInfo('Ejecuta primero: npm run deploy:auto');
      process.exit(1);
    }
    
    const stats = fs.statSync(apkPath);
    const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
    logSuccess(`APK encontrado: ${apkPath} (${sizeInMB} MB)`);
    
    // Crear release notes
    const releaseNotes = `# üöÄ NamuStock v${version}

## ‚ú® Sistema de Actualizaciones Autom√°ticas

### üì± Nuevas Caracter√≠sticas
- **Descarga autom√°tica** de actualizaciones dentro de la aplicaci√≥n
- **Instalaci√≥n sin fricci√≥n** - no necesitas salir de la app
- **Progreso visual en tiempo real** durante la descarga
- **Limpieza autom√°tica** de archivos antiguos para ahorrar espacio

### üîß Mejoras T√©cnicas
- Plugin nativo Android optimizado para instalaci√≥n de APKs
- Mejor manejo de errores con fallbacks seguros
- Sistema de notificaciones elegante y informativo
- Compatibilidad mejorada con Android 7.0+

## üì¶ Instalaci√≥n

### Para Nuevos Usuarios
1. Descarga el APK desde los assets de este release
2. Habilita "Instalar apps desconocidas" en tu dispositivo Android
3. Instala el APK descargado

### Para Usuarios Existentes
¬°Las actualizaciones ahora son autom√°ticas! üéâ
- La app detectar√° autom√°ticamente esta nueva versi√≥n
- Recibir√°s una notificaci√≥n elegante
- Haz clic en "Actualizar" y la app se actualizar√° sola
- Los archivos antiguos se limpiar√°n autom√°ticamente

## üîÑ Pr√≥ximas Actualizaciones
A partir de esta versi√≥n, todas las futuras actualizaciones se instalar√°n autom√°ticamente dentro de la app.

## üìä Estad√≠sticas
- **Tama√±o del APK**: ${sizeInMB} MB
- **Versi√≥n m√≠nima de Android**: 7.0 (API 24)
- **Arquitecturas soportadas**: ARM64, ARM32

---

**Nota**: Si tienes problemas con la actualizaci√≥n autom√°tica, puedes descargar e instalar manualmente el APK desde los assets de este release.`;

    // Guardar release notes en archivo temporal
    const notesFile = 'temp-release-notes.md';
    fs.writeFileSync(notesFile, releaseNotes);
    
    try {
      // Verificar si GitHub CLI est√° disponible
      try {
        execSync('gh --version', { stdio: 'pipe' });
        logSuccess('GitHub CLI disponible');
        
        // Crear release con GitHub CLI
        const createCommand = `gh release create ${tagName} "${apkPath}" --title "üöÄ NamuStock v${version} - Actualizaciones Autom√°ticas" --notes-file "${notesFile}" --latest`;
        
        logInfo('Creando release en GitHub...');
        execSync(createCommand, { stdio: 'inherit' });
        
        logSuccess(`Release creado: https://github.com/LautaroBravo08/namustock-app/releases/tag/${tagName}`);
        
      } catch (ghError) {
        // Si GitHub CLI no est√° disponible, mostrar instrucciones manuales
        logError('GitHub CLI no disponible');
        logInfo('Creando release manualmente...');
        
        // Abrir GitHub en el navegador
        const releaseUrl = 'https://github.com/LautaroBravo08/namustock-app/releases/new';
        execSync(`start ${releaseUrl}`, { stdio: 'pipe' });
        
        log('\nüìã Instrucciones para crear el release manualmente:', 'cyan');
        log(`   1. Se abri√≥ GitHub en tu navegador`);
        log(`   2. Tag: ${tagName}`);
        log(`   3. Title: üöÄ NamuStock v${version} - Actualizaciones Autom√°ticas`);
        log(`   4. Sube el archivo: ${apkPath}`);
        log(`   5. Copia la descripci√≥n del archivo: ${notesFile}`);
        log(`   6. Marca como "Latest release"`);
        log(`   7. Haz clic en "Publish release"`);
      }
      
    } finally {
      // Limpiar archivo temporal
      if (fs.existsSync(notesFile)) {
        fs.unlinkSync(notesFile);
      }
    }
    
    log('\nüéâ ¬°Release creado exitosamente!', 'green');
    log('\nüì± Ahora las actualizaciones in-app funcionar√°n correctamente', 'green');
    log('   Los usuarios recibir√°n notificaciones autom√°ticas', 'green');
    log('   y podr√°n actualizar sin salir de la aplicaci√≥n.', 'green');
    
  } catch (error) {
    logError(`Error: ${error.message}`);
    process.exit(1);
  }
}

main();