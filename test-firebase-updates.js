#!/usr/bin/env node

/**
 * Script para probar el sistema de actualizaciones con Firebase
 * No requiere firebase-admin, solo muestra instrucciones
 */

const fs = require('fs');

// Colores para la consola
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function logStep(step, message) {
  log(`\n${step} ${message}`, 'bright');
}

function logSuccess(message) {
  log(`‚úÖ ${message}`, 'green');
}

function logError(message) {
  log(`‚ùå ${message}`, 'red');
}

function logWarning(message) {
  log(`‚ö†Ô∏è  ${message}`, 'yellow');
}

function logInfo(message) {
  log(`‚ÑπÔ∏è  ${message}`, 'blue');
}

// Verificar archivos del sistema Firebase
function checkFirebaseFiles() {
  logStep('üìÅ', 'Verificando archivos del sistema Firebase...');
  
  const requiredFiles = [
    {
      path: 'src/services/firebaseUpdateService.js',
      desc: 'Servicio de actualizaci√≥n con Firebase'
    },
    {
      path: 'src/firebase/firestore.js',
      desc: 'Funciones de Firebase actualizadas'
    }
  ];
  
  let allExist = true;
  
  requiredFiles.forEach(({ path, desc }) => {
    if (fs.existsSync(path)) {
      logSuccess(`${desc} ‚úì`);
    } else {
      logError(`${desc} ‚úó (${path})`);
      allExist = false;
    }
  });
  
  return allExist;
}

// Verificar que los componentes usen Firebase
function checkComponentUpdates() {
  logStep('üîç', 'Verificando que los componentes usen Firebase...');
  
  const components = [
    'src/components/UpdateNotification.js',
    'src/components/UserMenu.js'
  ];
  
  let allUpdated = true;
  
  components.forEach(component => {
    if (fs.existsSync(component)) {
      const content = fs.readFileSync(component, 'utf8');
      
      if (content.includes('firebaseUpdateService')) {
        logSuccess(`${component} usa FirebaseUpdateService ‚úì`);
      } else if (content.includes('updateService')) {
        logWarning(`${component} todav√≠a usa updateService (puede estar bien)`);
      } else {
        logError(`${component} no importa ning√∫n updateService ‚úó`);
        allUpdated = false;
      }
    } else {
      logError(`${component} no encontrado ‚úó`);
      allUpdated = false;
    }
  });
  
  return allUpdated;
}

// Mostrar configuraci√≥n actual
function showCurrentConfig() {
  logStep('‚öôÔ∏è', 'Configuraci√≥n actual del proyecto...');
  
  try {
    // Leer package.json
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    logInfo(`Versi√≥n actual: ${packageJson.version}`);
    
    // Leer .env.local
    if (fs.existsSync('.env.local')) {
      const envContent = fs.readFileSync('.env.local', 'utf8');
      const versionMatch = envContent.match(/REACT_APP_VERSION=(.+)/);
      if (versionMatch) {
        logInfo(`Versi√≥n en .env.local: ${versionMatch[1]}`);
      }
    }
    
    // Verificar Firebase config
    if (fs.existsSync('src/firebase/config.js')) {
      logSuccess('Configuraci√≥n de Firebase encontrada');
    } else {
      logWarning('Configuraci√≥n de Firebase no encontrada');
    }
    
  } catch (error) {
    logError(`Error leyendo configuraci√≥n: ${error.message}`);
  }
}

// Instrucciones simplificadas para Firebase
function showSimpleFirebaseSetup() {
  logStep('üî•', 'Configuraci√≥n simplificada de Firebase');
  
  log('\nüìã Pasos r√°pidos:', 'cyan');
  log('   1. Abre Firebase Console: https://console.firebase.google.com/', 'cyan');
  log('   2. Ve a tu proyecto ‚Üí Firestore Database', 'cyan');
  log('   3. Crea colecci√≥n "app" ‚Üí documento "version"', 'cyan');
  log('   4. Agrega estos campos al documento:', 'cyan');
  
  log('\nüìù Campos m√≠nimos requeridos:', 'blue');
  log('   version: "1.0.84"', 'blue');
  log('   buildDate: "2025-07-28T10:00:00.000Z"', 'blue');
  log('   platform: "android"', 'blue');
  log('   releaseNotes: "Nueva versi√≥n con Firebase"', 'blue');
  log('   downloads: { android: "https://github.com/LautaroBravo08/namustock-app/releases/download/v1.0.84/namustock-1.0.84.apk" }', 'blue');
  
  log('\nüîí Reglas de Firestore:', 'yellow');
  log('   ‚Ä¢ Ve a Firestore ‚Üí Rules', 'yellow');
  log('   ‚Ä¢ Permite lectura p√∫blica de app/version', 'yellow');
  log('   ‚Ä¢ Ejemplo: allow read: if resource.id == "version";', 'yellow');
}

// Mostrar c√≥mo probar
function showTestInstructions() {
  logStep('üß™', 'C√≥mo probar el sistema');
  
  log('\n1Ô∏è‚É£ Probar en Web (deber√≠a estar deshabilitado):', 'cyan');
  log('   npm start', 'cyan');
  log('   Abrir DevTools ‚Üí Console', 'cyan');
  log('   Buscar: "Plataforma web detectada - Actualizaciones deshabilitadas"', 'cyan');
  
  log('\n2Ô∏è‚É£ Probar en Android (deber√≠a funcionar):', 'cyan');
  log('   npm run build', 'cyan');
  log('   npx cap sync android', 'cyan');
  log('   npx cap run android', 'cyan');
  log('   Buscar: "FirebaseUpdateService inicializado"', 'cyan');
  
  log('\nüîç Logs esperados:', 'blue');
  log('   üî• FirebaseUpdateService inicializado', 'blue');
  log('   üîÑ Configurando listener en tiempo real', 'blue');
  log('   üöÄ Verificando actualizaciones al iniciar (Android + Firebase)', 'blue');
  log('   üî• Consultando Firebase para informaci√≥n de versi√≥n', 'blue');
  log('   ‚úÖ Informaci√≥n obtenida desde Firebase', 'blue');
}

// Comparar sistemas
function showSystemComparison() {
  logStep('‚ö°', 'Comparaci√≥n: GitHub API vs Firebase');
  
  log('\nüìä Rendimiento:', 'bright');
  log('   GitHub API: 2-5 segundos + rate limits', 'red');
  log('   Firebase:   < 100ms + sin l√≠mites', 'green');
  
  log('\nüîÑ Actualizaciones:', 'bright');
  log('   GitHub API: Manual (bot√≥n)', 'yellow');
  log('   Firebase:   Tiempo real autom√°tico', 'green');
  
  log('\nüõ†Ô∏è Mantenimiento:', 'bright');
  log('   GitHub API: Complejo (cache, retry, fallback)', 'red');
  log('   Firebase:   Simple (solo cambiar documento)', 'green');
}

// Funci√≥n principal
async function main() {
  log('\nüî• Probando sistema de actualizaciones con Firebase...', 'bright');
  
  try {
    // Verificar archivos
    const filesOk = checkFirebaseFiles();
    const componentsOk = checkComponentUpdates();
    
    // Mostrar configuraci√≥n
    showCurrentConfig();
    
    // Instrucciones simplificadas
    showSimpleFirebaseSetup();
    
    // Instrucciones de prueba
    showTestInstructions();
    
    // Comparaci√≥n
    showSystemComparison();
    
    // Resumen final
    logStep('üìã', 'Estado del sistema');
    
    if (filesOk && componentsOk) {
      logSuccess('‚úÖ Sistema Firebase listo para usar');
      
      log('\nüéØ Pr√≥ximos pasos:', 'green');
      log('   1. Configurar Firebase seg√∫n instrucciones arriba', 'green');
      log('   2. Probar en navegador (deber√≠a estar deshabilitado)', 'green');
      log('   3. Probar en Android (deber√≠a funcionar)', 'green');
      log('   4. ¬°Disfrutar de actualizaciones instant√°neas!', 'green');
      
    } else {
      logWarning('‚ö†Ô∏è Algunos archivos pueden estar faltando');
      logInfo('Revisa los errores arriba');
    }
    
    log('\nüí° Nota:', 'blue');
    log('   El script update-firebase-version.js requiere firebase-admin', 'blue');
    log('   Para simplificar, usa Firebase Console directamente', 'blue');
    log('   Es m√°s f√°cil y no requiere dependencias adicionales', 'blue');
    
    return filesOk && componentsOk;
    
  } catch (error) {
    logError(`Error durante la prueba: ${error.message}`);
    return false;
  }
}

// Ejecutar prueba
main().then(success => {
  process.exit(success ? 0 : 1);
});